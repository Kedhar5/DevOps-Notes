Ansible:--
----------------------------------------------
Ansible is a opensource, Configuration management tool provided by Redhat 
Chef Puppet SaltStack are similar tools 

Configuration
--------------------
Any task which can be performed on servers is called configuration 
Ex: a) install/uninstall/update the packages 
    b) create the files or directories
	c) Start/stop the services 
	d) create/delete the users 

Ansible is a Python based tool 
We use SSH connection type from configuration managemnet tool to Host Machine 
We use YAML   Yet Another Markup Tool in Ansible 
Ansible is a push based Architecture 
Whatever configuartions are there in Ansible server can be pushed to Host Machine 

Ansible Architecture 
-------------------------
In host inventory we specify which host machines Ansible should connect tofrom ansible server 
default file name : Hosts
/etc/ansible/hosts is the directory 
yum install ansible -y 
Instead of default host inevntory name we can give custom name also 
Host inventory is both static and dynamic 
As a devops engineer we write ansible playlists. Which means a YAML file with series of instructions 

Core modules 
--------------
after installation of Ansible some default core modules will be present 
As per requirement we can write our custom modules, we need to write the module in python

Installation
--------------------
create 3 servers 
1 ansible and 2 host machines 
private IP's 
Ansible : 172.31.36.206
host 1 : 172.31.34.21
host 2 : 172.31.36.37 

connect to servers   
switch to root user   
create Ansible user   useradd ansible
set the pwd for ansible user   passwd ansible 
enable pswd auth   /etc/ssh/sshd_config
restart the sshd service   service sshd restart
provide sudo access visudo

user ansible 
pwd ansible

python --version 
sudo yum install python-pip
pip install ansible
in ansible user ansible --version 

Ansible is installed in ansible server 
From ansible server create SSH keys by using ansible user only 
ssh-keygen
copy SSH public key to host machines 
ssh-copy-id command is used here 
ssh-copy-id ansible@172.31.34.21
ssh-copy-id ansible@172.31.36.37

Now we keep host addresses in ansible server 
[ansible@ip-172-31-36-206 ~]$ cd /etc/
[ansible@ip-172-31-36-206 etc]$ sudo mkdir ansible
[sudo] password for ansible:
[ansible@ip-172-31-36-206 etc]$ cd ansible/
[ansible@ip-172-31-36-206 ansible]$ ls
[ansible@ip-172-31-36-206 ansible]$ pwd
/etc/ansible
[ansible@ip-172-31-36-206 ansible]$ sudo vi hosts

paste both the server Private Ip in the hosts file 

Now test the configuration connections using below command 
ansible all -m ping

/etc/ansible/hosts --> default 
/etc/ansible/flipkart --> cust Host inventory file 
ansible all -i /etc/ansible/flipkart -m ping 
ansible all --inventory-file /etc/ansible/flipkart -m ping

servers can be grouped as follows 
[webservers]
172.31.34.21

[appservers]
172.31.36.37

[DBserver]
172.31.36.37

Same server can be in multiple groups 
ansible DBserver -m ping
ansible appserver -m ping
ansible webserver -m ping

localhost can be added to hosts 
ssh-copy-id ansible@localhost
Then it also can be pinged 
ansible Ip -m ping is to ping a particular server 
ungrouped servers need to be placed at before all the headers in the hosts file 

if we mention all -m all the servers will be pinged which are present in the Hosts file 
to check the modules presnt by default : ansible-doc -l 
ansible-doc yum --> to get to know about a single module 
here yum is the module name 
docs.ansible.com the documentation will be present here 

ansible all -m ping -o is used to display the output in a single line 
ansible all -m shell -a "date" using this we can display date
by using the shell module as above we can use the Linux commands
ansible all -m shell -a "uptime" --> to display how long servers are up and running 
ansible all -m shell -a "df" or ansible all -m shell -a "df -h"

yum module
-----------------
ansible all -m yum -a "name=httpd" --> install httpd in all servers 
ansible all -b -m yum -a "name=httpd" --> -b means become 
ansible all -b -m service -a "name=httpd state=started" --> start the service 
service sshd status --> to check the status 
ansible all -b -m yum -a "name=git" --> install git in all servers 

copy module 
-------------
ansible all -m copy -a "src=devops.txt dest=/tmp/devops.txt"
copy file to all the Hosts machines 

File module 
-----------------
ansible all -m file -a "path=/home/ansible/filemodule.txt state=touch"
This is to create a file similarly we can create soft link hard link directories etc 

setup module
---------------
we can get all the servers Host details 
ansible all -m setup

user module 
---------------
Create Kedhar user in all Host machines
ansible all -b -m user -a "name=Kedhar"
ls -l /home/ --> to view all the Users in the server 

YAML
---------------
Yet Another Markup Language 
Human friendly, Data serialization language 
It can support many languages 
key: value 
name: kedhar
age: 22

we can use true|yes false|no for boolean data type 
We can use string value float int for values 
we use use lists as follows 

devOpsTools:
 - git
 - gitHub 
 - Maven 
 - Tomcat
 or we can use as below 
devOpsTools: [git,maven,tomcat,ansible]

Playbook 
-------------
playbook is a Single YAML file which contain 1 or more YAML files 
Play is set of tasks which can be execued on host machines 
Task is action to perform on Host Machines
Sample playbook to ping servers 
------------------------------------

pingServers.yaml

---
- hosts: all
  tasks: 
  - name: Ping Servers
    ping: 
...

ansible-playbook 