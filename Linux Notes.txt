DevOps
---------------------------
Linux Commands:-
---------------------------

Tools to be installed in Linux environment:-

SSH Tools
-------------
SSH Tools are only for windows. For Mac SSH tools are already built in as Terminal

Secure shell
Mobxterm
Gitbash

Using SSH tool we can connect to Linux terminal and execute the commands.
We can create Files and Directories/Folders.
For Uploading and Downloading the files from Laptop to Server and vice-versa we use FTP tools

FTP tools:-
-------------------
WinSCP--- Windows Secure Copy
FileZilla

Linux commands are case sensitive but in DOS it is not case sensitive

LInux Directory Structure
-------------------------------------
/ --> root directory
Home directory has all usres information
Bin directory has all bin files
bin
------
ls
mkdir
date 

sbin -- system binary
------------------------
shutdown
useradd
reboot

Difference b/w bin and sbin
-- Root user access binaries available in both bin and sbin
-- normal/system user access only bin directories

types of users
-----------------------
root user -- only 1
normal users --- n number of users created by root user on demand
system users --- created by software installations

etc
--------------------
has all configuration files
sudoers
passwd
shadow
group
motd

opt
--------------------
by default it is empty. All 3rd party s/w are in opt directory

dev
--------------------
device info is present in this directory

lib
-------------
Libraries used internally

var
-------------
variable files
for storing the logs

temp
--------------
temporary files
can be accessed by anyone

proc
---------------
for every command in Linux there is a process id and also has cpuinfo

[ec2-user@ip-172-31-37-12 ~]$ uname
Linux
[ec2-user@ip-172-31-37-12 ~]$ pwd
/home/ec2-user
[ec2-user@ip-172-31-37-12 ~]$ mkdir -v test3
mkdir: created directory 'test3'
[ec2-user@ip-172-31-37-12 ~]$ ls
test  test1  test2  test3
[ec2-user@ip-172-31-37-12 ~]$ mkdir -vp t1/t2/t3
mkdir: created directory 't1'
mkdir: created directory 't1/t2'
mkdir: created directory 't1/t2/t3'
[ec2-user@ip-172-31-37-12 ~]$ sudo su -
Last login: Mon Nov  6 08:33:42 UTC 2023 on pts/0
[root@ip-172-31-37-12 ~]# yum install tree
Last metadata expiration check: 1:25:47 ago on Mon Nov  6 07:33:42 2023.
Package tree-1.8.0-6.amzn2023.0.2.x86_64 is already installed.
Dependencies resolved.
Nothing to do.
Complete!
[root@ip-172-31-37-12 ~]# tree
.
└── a
    └── b
        └── c

3 directories, 0 files
[root@ip-172-31-37-12 ~]# mkdir -v devops/file1 file2
mkdir: created directory 'devops/file1'
mkdir: cannot create directory ‘file2’: File exists
[ec2-user@ip-172-31-37-12 ~]$ sudo su -
Last login: Mon Nov  6 08:59:05 UTC 2023 on pts/0
[root@ip-172-31-37-12 ~]# sudo su -
Last login: Mon Nov  6 13:43:28 UTC 2023 on pts/0
[root@ip-172-31-37-12 ~]# tree
.
├── a
│   └── b
│       └── c
├── devops
│   ├── file1
│   ├── file2
│   └── file3
├── file2
└── file4

9 directories, 0 files
[root@ip-172-31-37-12 ~]# rmdir a
rmdir: failed to remove 'a': Directory not empty
[root@ip-172-31-37-12 ~]# rmdir a/b/c
[root@ip-172-31-37-12 ~]# tree
.
├── a
│   └── b
├── devops
│   ├── file1
│   ├── file2
│   └── file3
├── file2
└── file4

8 directories, 0 files
[root@ip-172-31-37-12 ~]# rmdir file2
[root@ip-172-31-37-12 ~]# rmdir file4
[root@ip-172-31-37-12 ~]# tree
.
├── a
│   └── b
└── devops
    ├── file1
    ├── file2
    └── file3

6 directories, 0 files
[root@ip-172-31-37-12 ~]#
[root@ip-172-31-37-12 ~]# rm -rf devops
[root@ip-172-31-37-12 ~]# tree
.
└── a
    └── b

2 directories, 0 files
[root@ip-172-31-37-12 ~]# touch test1.txt
[root@ip-172-31-37-12 ~]# tree
.
├── a
│   └── b
└── test1.txt

2 directories, 1 file
[root@ip-172-31-37-12 ~]# rm -f test.txt
[root@ip-172-31-37-12 ~]# tree
.
├── a
│   └── b
└── test1.txt

2 directories, 1 file
[root@ip-172-31-37-12 ~]# rm -f test1.txt
[root@ip-172-31-37-12 ~]# tree
.
└── a
    └── b

2 directories, 0 files
[ec2-user@ip-172-31-37-12 ~]$ touch test1.txt -- create a text file
[ec2-user@ip-172-31-37-12 ~]$ vi test1.txt  -- edit a text file
 If the file exists and u create file with same name it will be created but content will remain in file
Linux
[ec2-user@ip-172-31-37-12 ~]$ cat test1.txt
kedhar
this is my 1sst linux insert file
[root@ip-172-31-37-12 ~]# find . -type f
./.ssh/authorized_keys
./.bash_logout
./.bash_profile
./.bashrc
./.cshrc
./.tcshrc
./.bash_history
./abc.txt
[root@ip-172-31-37-12 ~]# find . -type f -empty
./abc.txt
[root@ip-172-31-37-12 ~]# find .type d
find: ‘.type’: No such file or directory
find: ‘d’: No such file or directory
[root@ip-172-31-37-12 ~]# find . -type d
.
./.ssh
./a
./a/b
[root@ip-172-31-37-12 ~]# find . -type d -empty
./a/b
[ec2-user@ip-172-31-37-12 ~]$ umask
0022
[ec2-user@ip-172-31-37-12 ~]$ sudo su -
Last login: Tue Nov  7 10:09:19 UTC 2023 on pts/0
[root@ip-172-31-37-12 ~]# umask
0022
[root@ip-172-31-37-12 ~]# exit
logout


umask
read 4
write 2
execute 1
umask from 000 to 777

[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 4
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 13:56 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$ umask 222
[ec2-user@ip-172-31-37-12 ~]$ touch jenkins.txt
[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 4
-r--r--r--. 1 ec2-user ec2-user  0 Nov  7 10:20 jenkins.txt
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 13:56 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$ chmod 0022 jenkins.txt
[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 4
-----w--w-. 1 ec2-user ec2-user  0 Nov  7 10:20 jenkins.txt
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 13:56 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$ chmod 444 jenkins.txt
[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 4
-r--r--r--. 1 ec2-user ec2-user  0 Nov  7 10:20 jenkins.txt
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 13:56 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$

[root@ip-172-31-37-12 ~]# ls -l
total 0
drwxr-xr-x. 3 root root 15 Nov  6 08:33 a
-rw-r--r--. 1 root root  0 Nov  6 14:08 abc.txt
[root@ip-172-31-37-12 ~]# chown ec2-user a
[root@ip-172-31-37-12 ~]# ls -l
total 0
drwxr-xr-x. 3 ec2-user root 15 Nov  6 08:33 a
-rw-r--r--. 1 root     root  0 Nov  6 14:08 abc.txt
[root@ip-172-31-37-12 ~]#

[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 8
-rwxrwxrwx. 1 ec2-user ec2-user 41 Nov  7 10:50 jenkins.txt
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  7 10:33 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$ cp test1.txt test/
[ec2-user@ip-172-31-37-12 ~]$ ls -l test/
total 4
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  7 10:56 test1.txt
[ec2-user@ip-172-31-37-12 ~]$

[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 8
-rwxrwxrwx. 1 ec2-user ec2-user 41 Nov  7 10:50 jenkins.txt
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user 23 Nov  7 10:56 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$ mv jenkins.txt jen.txt
[ec2-user@ip-172-31-37-12 ~]$ ls -kl
total 8
-rwxrwxrwx. 1 ec2-user ec2-user 41 Nov  7 10:50 jen.txt
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user 23 Nov  7 10:56 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$

[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 8
-rwxrwxrwx. 1 ec2-user ec2-user 41 Nov  7 10:50 jen.txt
drwxr-xr-x. 3 ec2-user ec2-user 16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user 23 Nov  7 10:56 test
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:31 test1
-rw-r--r--. 1 ec2-user ec2-user 41 Nov  6 13:59 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user  6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$ file test1.txt
test1.txt: ASCII text
[ec2-user@ip-172-31-37-12 ~]$ file file1.txt
file1.txt: empty
[ec2-user@ip-172-31-37-12 ~]$ wc test1.txt
 2    8     41 test1.txt
line Word characters
[ec2-user@ip-172-31-37-12 ~]$ cat test1.txt
kedhar
this is my 1sst linux insert file
Include below lines in abovbe commands as per requirement
-l no of lines
-w no of words
-c no of characters

[ec2-user@ip-172-31-37-12 ~]$ wc -w *.txt
 0 file1.txt
 8 jen.txt
 8 test1.txt
16 total

[ec2-user@ip-172-31-37-12 ~]$ vi test1.txt
[ec2-user@ip-172-31-37-12 ~]$ cat test1.txt
Kedhar nath nagella
first update
[ec2-user@ip-172-31-37-12 ~]$ cat lntest.txt
Kedhar nath nagella
first update
[ec2-user@ip-172-31-37-12 ~]$ vi test1.txt
[ec2-user@ip-172-31-37-12 ~]$ cat test1.txt
Kedhar nath nagella
first update
Kedhar has updated 1 file and the other is updated as it is linked to 1st
[ec2-user@ip-172-31-37-12 ~]$ cat lntest.txt
Kedhar nath nagella
first update
Kedhar has updated 1 file and the other is updated as it is linked to 1st
[ec2-user@ip-172-31-37-12 ~]$
[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 12
-rw-r--r--. 1 ec2-user ec2-user   0 Nov  8 10:04 file1.txt
-rwxrwxrwx. 1 ec2-user ec2-user  41 Nov  7 10:50 jen.txt
-rw-r--r--. 2 ec2-user ec2-user 107 Nov  8 10:24 lntest.txt
drwxr-xr-x. 3 ec2-user ec2-user  16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user  23 Nov  7 10:56 test
drwxr-xr-x. 2 ec2-user ec2-user   6 Nov  6 08:31 test1
-rw-r--r--. 2 ec2-user ec2-user 107 Nov  8 10:24 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user   6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user   6 Nov  6 08:57 test3
[ec2-user@ip-172-31-37-12 ~]$ ln -s test1.tst lnsoft.txt
[ec2-user@ip-172-31-37-12 ~]$ ls -l
total 12
-rw-r--r--. 1 ec2-user ec2-user   0 Nov  8 10:04 file1.txt
-rwxrwxrwx. 1 ec2-user ec2-user  41 Nov  7 10:50 jen.txt
lrwxrwxrwx. 1 ec2-user ec2-user   9 Nov  8 10:26 lnsoft.txt -> test1.tst
-rw-r--r--. 2 ec2-user ec2-user 107 Nov  8 10:24 lntest.txt
drwxr-xr-x. 3 ec2-user ec2-user  16 Nov  6 08:58 t1
drwxr-xr-x. 2 ec2-user ec2-user  23 Nov  7 10:56 test
drwxr-xr-x. 2 ec2-user ec2-user   6 Nov  6 08:31 test1
-rw-r--r--. 2 ec2-user ec2-user 107 Nov  8 10:24 test1.txt
drwxr-xr-x. 2 ec2-user ec2-user   6 Nov  6 08:56 test2
drwxr-xr-x. 2 ec2-user ec2-user   6 Nov  6 08:57 test3

After viewing file ":se nu" to diaplay line numbers
:60 to go to particular line number
 /keyword to fing particular key words 

[ec2-user@ip-172-31-37-12 ~]$ echo Hello Guys
Hello Guys
[ec2-user@ip-172-31-37-12 ~]$ echo Hello       Guys
Hello Guys
[ec2-user@ip-172-31-37-12 ~]$ echo 'Hello      Guys'
Hello      Guys
[ec2-user@ip-172-31-37-12 ~]$

[ec2-user@ip-172-31-37-12 ~]$ cat hi.txt
hello

[ec2-user@ip-172-31-37-12 ~]$ cat -n hi.txt
     1  hello
     2

Print particular no of lines in a file
[ec2-user@ip-172-31-37-12 ~]$ head -n 15 sudoers
## Sudoers allows particular users to run various commands as
## the root user, without needing the root password.
##
## Examples are provided at the bottom of the file for collections
## of related commands, which can then be delegated out to particular
## users or groups.
##
## This file must be edited with the 'visudo' command.

## Host Aliases
## Groups of machines. You may prefer to use hostnames (perhaps using
## wildcards for entire domains) or IP addresses instead.
# Host_Alias     FILESERVERS = fs1, fs2
# Host_Alias     MAILSERVERS = smtp, smtp2

Use multiple commands as a single command
[ec2-user@ip-172-31-37-12 ~]$ head -15 sudoers | cat -n
     1  ## Sudoers allows particular users to run various commands as
     2  ## the root user, without needing the root password.
     3  ##
     4  ## Examples are provided at the bottom of the file for collections
     5  ## of related commands, which can then be delegated out to particular
     6  ## users or groups.
     7  ##
     8  ## This file must be edited with the 'visudo' command.
     9
    10  ## Host Aliases
    11  ## Groups of machines. You may prefer to use hostnames (perhaps using
    12  ## wildcards for entire domains) or IP addresses instead.
    13  # Host_Alias     FILESERVERS = fs1, fs2
    14  # Host_Alias     MAILSERVERS = smtp, smtp2
    15

Display a particuylar line
[ec2-user@ip-172-31-37-12 ~]$ sed -n "79p" sudoers
Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"

Display any set of lines[ec2-user@ip-172-31-37-12 ~]$ sed -n "36,40p" sudoers
# Cmnd_Alias LOCATE = /usr/bin/updatedb

## Storage
# Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe, /bin/mount, /bin/umount

[ec2-user@ip-172-31-37-12 ~]$ vi sample.txt
[ec2-user@ip-172-31-37-12 ~]$ cat sample.txt
red red
red red red
red red red red
[ec2-user@ip-172-31-37-12 ~]$ sed "s/red/blue/" sample.txt
blue red
blue red red
blue red red red
[ec2-user@ip-172-31-37-12 ~]$ sed -i "s/red/blue/" sample.txt
[ec2-user@ip-172-31-37-12 ~]$ cat sample.txt
blue red
blue red red
blue red red red
[ec2-user@ip-172-31-37-12 ~]$ sed -i "s/red/blue/g" sample.txt
[ec2-user@ip-172-31-37-12 ~]$ cat sample.txt
blue blue
blue blue blue
blue blue blue blue

[ec2-user@ip-172-31-37-12 ~]$ vi friends.txt
[ec2-user@ip-172-31-37-12 ~]$ cat friends.txt
kedhar
kesav
teja
nadeen
rajesh
[ec2-user@ip-172-31-37-12 ~]$ sort friends.txt
kedhar
kesav
nadeen
rajesh
teja
[ec2-user@ip-172-31-37-12 ~]$ sort -r friends.txt
teja
rajesh
nadeen
kesav
kedhar
[ec2-user@ip-172-31-37-12 ~]$ cat friends.txt | sort -r friends.txt
teja
rajesh
nadeen
kesav
kedhar

[ec2-user@ip-172-31-37-12 ~]$ cat friends.txt
kedhar
kesav
teja
nadeen
rajesh
[ec2-user@ip-172-31-37-12 ~]$ cat friends.txt | sort | tr [a-z] [A-Z]
KEDHAR
KESAV
NADEEN
RAJESH
TEJA

Find a keyword in a file
[ec2-user@ip-172-31-37-12 ~]$ grep kedhar friends.txt
kedhar

[root@ip-172-31-37-12 ~]# hostname -i
172.31.37.12

[ec2-user@ip-172-31-37-12 ~]$ systemctl list-unit-files

[root@kedharnagella ~]# service sshd status
Redirecting to /bin/systemctl status sshd.service
● sshd.service - OpenSSH server daemon
     Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; preset: enabled)
     Active: active (running) since Mon 2023-11-06 07:33:27 UTC; 3 days ago

[root@kedharnagella ~]# service sshd stop
Redirecting to /bin/systemctl stop sshd.service
[root@kedharnagella ~]# service sshd status
Redirecting to /bin/systemctl status sshd.service
○ sshd.service - OpenSSH server daemon
     Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; preset: enabled)
     Active: inactive (dead) since Thu 2023-11-09 14:45:27 UTC; 13s ago

[root@kedharnagella ~]# service sshd start
Redirecting to /bin/systemctl start sshd.service
[root@kedharnagella ~]# service sshd status
Redirecting to /bin/systemctl status sshd.service
● sshd.service - OpenSSH server daemon
     Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; preset: enabled)
     Active: active (running) since Thu 2023-11-09 14:45:52 UTC; 4s ago

[root@kedharnagella ~]# service sshd restart
Redirecting to /bin/systemctl restart sshd.service
[root@kedharnagella ~]# service sshd status
Redirecting to /bin/systemctl status sshd.service
● sshd.service - OpenSSH server daemon
     Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; preset: enabled)
     Active: active (running) since Thu 2023-11-09 14:48:13 UTC; 8s ago

[root@kedharnagella ~]# uptime
 14:49:58 up 3 days,  7:16,  1 user,  load average: 0.00, 0.03, 0.00
[root@kedharnagella ~]# last
ec2-user pts/0        157.48.113.11    Thu Nov  9 14:44   still logged in
ec2-user pts/0        157.48.113.11    Thu Nov  9 14:18 - 14:42  (00:24)
ec2-user pts/0        157.48.115.247   Thu Nov  9 09:58 - 10:54  (00:56)
ec2-user pts/0        157.48.113.12    Wed Nov  8 10:00 - 11:03  (01:03)
ec2-user pts/0        157.48.115.94    Tue Nov  7 10:47 - 11:02  (00:15)
ec2-user pts/0        157.48.115.94    Tue Nov  7 10:05 - 10:46  (00:41)
root     pts/0        157.48.115.94    Tue Nov  7 10:04 - 10:04  (00:00)
ec2-user pts/0        157.48.113.254   Mon Nov  6 13:57 - 14:17  (00:19)
ec2-user pts/1        157.48.113.254   Mon Nov  6 13:55 - 13:57  (00:02)
ec2-user pts/0        157.48.112.165   Mon Nov  6 13:42 - 13:56  (00:13)
ec2-user pts/0        157.48.112.165   Mon Nov  6 13:15 - 13:21  (00:06)
ec2-user pts/0        157.48.112.165   Mon Nov  6 08:54 - 09:03  (00:09)
ec2-user pts/0        157.48.112.165   Mon Nov  6 08:39 - 08:44  (00:05)
ec2-user pts/0        157.48.112.165   Mon Nov  6 08:29 - 08:35  (00:05)
reboot   system boot  6.1.59-84.139.am Mon Nov  6 07:33   still running

wtmp begins Mon Nov  6 07:33:20 2023

To logoff using the ProcessID
[ec2-user@kedharnagella ~]$ ps
    PID TTY          TIME CMD
 149958 pts/0    00:00:00 bash
 150848 pts/0    00:00:00 ps
[ec2-user@kedharnagella ~]$ kill -9 ^C
[ec2-user@kedharnagella ~]$ kill -9 149958
Connection to ec2-13-233-108-31.ap-south-1.compute.amazonaws.com closed.

[root@kedharnagella ~]# useradd Kedhar
[root@kedharnagella ~]# passwd Kedhar
Changing password for user Kedhar.
New password:
BAD PASSWORD: The password is shorter than 8 characters
Retype new password:
passwd: all authentication tokens updated successfully.

[root@kedharnagella ~]# chage Kedhar
Changing the aging information for Kedhar
Enter the new value, or press ENTER for the default

        Minimum Password Age [0]: 120
        Maximum Password Age [99999]: 120
        Last Password Change (YYYY-MM-DD) [2023-11-10]:
        Password Expiration Warning [7]: 10
        Password Inactive [-1]:
        Account Expiration Date (YYYY-MM-DD) [-1]:

Create a group
[root@kedharnagella ~]# groupadd devops
Add a user to Group
[root@kedharnagella ~]# usermod -g devops kedhar
usermod: user 'kedhar' does not exist
[root@kedharnagella ~]# usermod -g devops Kedhar
[root@kedharnagella ~]# id Kedhar
uid=1001(Kedhar) gid=1003(devops) groups=1003(devops)

[root@kedharnagella ~]# lid -g devops
 Kedhar(uid=1001)

[ec2-user@kedharnagella ~]$ ./hello.sh
-bash: ./hello.sh: Permission denied
[ec2-user@kedharnagella ~]$ chmod 777 hello.sh
[ec2-user@kedharnagella ~]$ ./hello.sh
Hello Guys
GM/GA/GE
today date is
Mon Nov 13 10:36:50 UTC 2023

To connect with Username & pwd rename the sshd config file in etc directory 
PasswordAUth should be Yes
restart the sshd sedrvice
then username@ipaddress & address

To copy a file across servers use scp command
[ec2-user@kedharnagella ~]$ scp file1.txt ec2-user@15.206.91.152:/tmp/
The authenticity of host '15.206.91.152 (15.206.91.152)' can't be established.
ED25519 key fingerprint is SHA256:1K/DHOHGvsbKNJ/Q34KzcuyxHNt0oislly+xvXJCdT8.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '15.206.91.152' (ED25519) to the list of known hosts.
ec2-user@15.206.91.152's password:
file1.txt                                 100%    0     0.0KB/s   00:00

[root@ip-172-31-40-111 tmp]# ls
Nothing is present in the directory before copying the filelpd
[root@ip-172-31-40-111 tmp]# ls
file1.txt

[ec2-user@kedharnagella ~]$ ls
file1.txt    hello.sh  hi.txt      lntest.txt    sudoers  test1      test3
friends.txt  hi.log    index.html  nanotest.txt  t1       test1.txt
hello.log    hi.sh     jen.txt     sample.txt    test     test2
[ec2-user@kedharnagella ~]$ ls > lsopt.txt
[ec2-user@kedharnagella ~]$ cat lsopt.txt
file1.txt
friends.txt
hello.log
hello.sh
hi.log
hi.sh
hi.txt
index.htmlteeopt.txt
jen.txt
lntest.txt
lsopt.txt
nanotest.txt
sample.txt
sudoers
t1
test
test1
test1.txt
test2
test3

[ec2-user@kedharnagella ~]$ ls | tee teeopt.txt
file1.txt
friends.txt
hello.log
hello.sh
hi.log
hi.sh
hi.txt
index.html
jen.txt
lntest.txt
lsopt.txt
nanotest.txt
sample.txt
sudoers
t1
teeopt.txt
test
test1
test1.txt
test2
test3
[ec2-user@kedharnagella ~]$ cat teeopt.txt
file1.txt
friends.txt
hello.log
hello.sh
hi.log
hi.sh
hi.txt
index.html
jen.txt
lntest.txt
lsopt.txt
nanotest.txt
sample.txt
sudoers
t1
teeopt.txt
test
test1
test1.txt
test2
test3

Host *
    ServerAliveInterval 20
    TCPKeepAlive no